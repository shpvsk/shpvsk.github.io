"use strict";function _typeof(e){"@babel/helpers - typeof";return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e){var o={type:"html",content:"",url:"",ajax:{},ajax_request:null,closeOnEsc:!0,closeOnOverlayClick:!0,clone:!1,overlay:{block:void 0,tpl:'<div class="arcticmodal-overlay"></div>',css:{backgroundColor:"#000",opacity:.6}},container:{block:void 0,tpl:'<div class="arcticmodal-container"><table class="arcticmodal-container_i"><tr><td class="arcticmodal-container_i2"></td></tr></table></div>'},wrap:void 0,body:void 0,errors:{tpl:'<div class="arcticmodal-error arcticmodal-close"></div>',autoclose_delay:2e3,ajax_unsuccessful_load:"Error"},openEffect:{type:"fade",speed:400},closeEffect:{type:"fade",speed:400},beforeOpen:e.noop,afterOpen:e.noop,beforeClose:e.noop,afterClose:e.noop,afterLoading:e.noop,afterLoadingOnShow:e.noop,errorLoading:e.noop},t=0,a=e([]),r={isEventOut:function(o,t){var a=!0;return e(o).each(function(){e(t.target).get(0)==e(this).get(0)&&(a=!1),0==e(t.target).closest("HTML",e(this).get(0)).length&&(a=!1)}),a}},c={getParentEl:function(o){var t=e(o);return t.data("arcticmodal")?t:!!(t=e(o).closest(".arcticmodal-container").data("arcticmodalParentEl"))&&t},transition:function(o,t,a,r){switch(r=void 0==r?e.noop:r,a.type){case"fade":"show"==t?o.fadeIn(a.speed,r):o.fadeOut(a.speed,r);break;case"none":"show"==t?o.show():o.hide(),r()}},prepare_body:function(o,t){e(".arcticmodal-close",o.body).unbind("click.arcticmodal").bind("click.arcticmodal",function(){return t.arcticmodal("close"),!1})},init_el:function(o,i){var l=o.data("arcticmodal");if(!l){if(l=i,t++,l.modalID=t,l.overlay.block=e(l.overlay.tpl),l.overlay.block.css(l.overlay.css),l.container.block=e(l.container.tpl),l.body=e(".arcticmodal-container_i2",l.container.block),i.clone?l.body.html(o.clone(!0)):(o.before('<div id="arcticmodalReserve'+l.modalID+'" style="display: none" />'),l.body.html(o)),c.prepare_body(l,o),l.closeOnOverlayClick&&l.overlay.block.add(l.container.block).click(function(t){r.isEventOut(e(">*",l.body),t)&&o.arcticmodal("close")}),l.container.block.data("arcticmodalParentEl",o),o.data("arcticmodal",l),a=e.merge(a,o),e.proxy(n.show,o)(),"html"==l.type)return o;if(void 0!=l.ajax.beforeSend){var d=l.ajax.beforeSend;delete l.ajax.beforeSend}if(void 0!=l.ajax.success){var s=l.ajax.success;delete l.ajax.success}if(void 0!=l.ajax.error){var f=l.ajax.error;delete l.ajax.error}var u=e.extend(!0,{url:l.url,beforeSend:function(){void 0==d?l.body.html('<div class="arcticmodal-loading" />'):d(l,o)},success:function(e){o.trigger("afterLoading"),l.afterLoading(l,o,e),void 0==s?l.body.html(e):s(l,o,e),c.prepare_body(l,o),o.trigger("afterLoadingOnShow"),l.afterLoadingOnShow(l,o,e)},error:function(){o.trigger("errorLoading"),l.errorLoading(l,o),void 0==f?(l.body.html(l.errors.tpl),e(".arcticmodal-error",l.body).html(l.errors.ajax_unsuccessful_load),e(".arcticmodal-close",l.body).click(function(){return o.arcticmodal("close"),!1}),l.errors.autoclose_delay&&setTimeout(function(){o.arcticmodal("close")},l.errors.autoclose_delay)):f(l,o)}},l.ajax);l.ajax_request=e.ajax(u),o.data("arcticmodal",l)}},init:function(t){if(t=e.extend(!0,{},o,t),!e.isFunction(this))return this.each(function(){c.init_el(e(this),e.extend(!0,{},t))});if(void 0==t)e.error("jquery.arcticmodal: Uncorrect parameters");else if(""==t.type)e.error('jquery.arcticmodal: Don\'t set parameter "type"');else switch(t.type){case"html":if(""==t.content){e.error('jquery.arcticmodal: Don\'t set parameter "content"');break}var a=t.content;return t.content="",c.init_el(e(a),t);case"ajax":if(""==t.url){e.error('jquery.arcticmodal: Don\'t set parameter "url"');break}return c.init_el(e("<div />"),t)}}},n={show:function(){var o=c.getParentEl(this);if(!1!==o){var t=o.data("arcticmodal");if(t.overlay.block.hide(),t.container.block.hide(),e("BODY").append(t.overlay.block),e("BODY").append(t.container.block),t.beforeOpen(t,o),o.trigger("beforeOpen"),"hidden"!=t.wrap.css("overflow")){t.wrap.data("arcticmodalOverflow",t.wrap.css("overflow"));var r=t.wrap.outerWidth(!0);t.wrap.css("overflow","hidden");var n=t.wrap.outerWidth(!0);n!=r&&t.wrap.css("marginRight",n-r+"px")}return a.not(o).each(function(){e(this).data("arcticmodal").overlay.block.hide()}),c.transition(t.overlay.block,"show",1<a.length?{type:"none"}:t.openEffect),c.transition(t.container.block,"show",1<a.length?{type:"none"}:t.openEffect,function(){t.afterOpen(t,o),o.trigger("afterOpen")}),o}e.error("jquery.arcticmodal: Uncorrect call")},close:function(){return e.isFunction(this)?void a.each(function(){e(this).arcticmodal("close")}):this.each(function(){var o=c.getParentEl(this);if(!1===o)e.error("jquery.arcticmodal: Uncorrect call");else{var t=o.data("arcticmodal");!1!==t.beforeClose(t,o)&&(o.trigger("beforeClose"),a.not(o).last().each(function(){e(this).data("arcticmodal").overlay.block.show()}),c.transition(t.overlay.block,"hide",1<a.length?{type:"none"}:t.closeEffect),c.transition(t.container.block,"hide",1<a.length?{type:"none"}:t.closeEffect,function(){t.afterClose(t,o),o.trigger("afterClose"),t.clone||e("#arcticmodalReserve"+t.modalID).replaceWith(t.body.find(">*")),t.overlay.block.remove(),t.container.block.remove(),o.data("arcticmodal",null),e(".arcticmodal-container").length||(t.wrap.data("arcticmodalOverflow")&&t.wrap.css("overflow",t.wrap.data("arcticmodalOverflow")),t.wrap.css("marginRight",0))}),"ajax"==t.type&&t.ajax_request.abort(),a=a.not(o))}})},setDefault:function(t){e.extend(!0,o,t)}};e(function(){o.wrap=e(document.all&&!document.querySelector?"html":"body")}),e(document).bind("keyup.arcticmodal",function(e){var o=a.last();o.length&&o.data("arcticmodal").closeOnEsc&&27===e.keyCode&&o.arcticmodal("close")}),e.arcticmodal=e.fn.arcticmodal=function(o){return n[o]?n[o].apply(this,Array.prototype.slice.call(arguments,1)):"object"!==_typeof(o)&&o?void e.error("jquery.arcticmodal: Method "+o+" does not exist"):c.init.apply(this,arguments)}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
