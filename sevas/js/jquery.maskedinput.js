"use strict";function _typeof(e){"@babel/helpers - typeof";return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e("object"==("undefined"==typeof exports?"undefined":_typeof(exports))?require("jquery"):jQuery)}(function(e){var t,n=navigator.userAgent,a=/iphone/i.test(n),i=/chrome/i.test(n),r=/android/i.test(n);e.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},e.fn.extend({caret:function(e,t){var n;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&(n=this.createTextRange(),n.collapse(!0),n.moveEnd("character",t),n.moveStart("character",e),n.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(n=document.selection.createRange(),e=0-n.duplicate().moveStart("character",-1e5),t=e+n.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(n,o){var c,f,l,u,s,m,h,p;if(!n&&this.length>0){c=e(this[0]);var d=c.data(e.mask.dataName);return d?d():void 0}return o=e.extend({autoclear:e.mask.autoclear,placeholder:e.mask.placeholder,completed:null},o),f=e.mask.definitions,l=[],u=h=n.length,s=null,e.each(n.split(""),function(e,t){"?"==t?(h--,u=e):f[t]?(l.push(new RegExp(f[t])),null===s&&(s=l.length-1),u>e&&(m=l.length-1)):l.push(null)}),this.trigger("unmask").each(function(){function c(){if(o.completed){for(var e=s;m>=e;e++)if(l[e]&&C[e]===d(e))return;o.completed.call(w)}}function d(e){return o.placeholder.charAt(e<o.placeholder.length?e:0)}function g(e){for(;++e<h&&!l[e];);return e}function b(e){for(;--e>=0&&!l[e];);return e}function v(e,t){var n,a;if(!(0>e)){for(n=e,a=g(t);h>n;n++)if(l[n]){if(!(h>a&&l[n].test(C[a])))break;C[n]=C[a],C[a]=d(a),a=g(a)}A(),w.caret(Math.max(s,e))}}function y(e){var t,n,a,i;for(t=e,n=d(e);h>t;t++)if(l[t]){if(a=g(t),i=C[t],C[t]=n,!(h>a&&l[a].test(i)))break;n=i}}function k(){var e=w.val(),t=w.caret();if(p&&p.length&&p.length>e.length){for(T(!0);t.begin>0&&!l[t.begin-1];)t.begin--;if(0===t.begin)for(;t.begin<s&&!l[t.begin];)t.begin++;w.caret(t.begin,t.begin)}else{for(T(!0);t.begin<h&&!l[t.begin];)t.begin++;w.caret(t.begin,t.begin)}c()}function S(){T(),w.val()!=E&&w.change()}function x(e){if(!w.prop("readonly")){var t,n,i,r=e.which||e.keyCode;p=w.val(),8===r||46===r||a&&127===r?(t=w.caret(),n=t.begin,i=t.end,i-n===0&&(n=46!==r?b(n):i=g(n-1),i=46===r?g(i):i),R(n,i),v(n,i-1),e.preventDefault()):13===r?S.call(this,e):27===r&&(w.val(E),w.caret(0,T()),e.preventDefault())}}function j(t){if(!w.prop("readonly")){var n,a,i,o=t.which||t.keyCode,f=w.caret();if(!(t.ctrlKey||t.altKey||t.metaKey||32>o)&&o&&13!==o){if(f.end-f.begin!==0&&(R(f.begin,f.end),v(f.begin,f.end-1)),n=g(f.begin-1),h>n&&(a=String.fromCharCode(o),l[n].test(a))){if(y(n),C[n]=a,A(),i=g(n),r){var u=function(){e.proxy(e.fn.caret,w,i)()};setTimeout(u,0)}else w.caret(i);f.begin<=m&&c()}t.preventDefault()}}}function R(e,t){var n;for(n=e;t>n&&h>n;n++)l[n]&&(C[n]=d(n))}function A(){w.val(C.join(""))}function T(e){var t,n,a,i=w.val(),r=-1;for(t=0,a=0;h>t;t++)if(l[t]){for(C[t]=d(t);a++<i.length;)if(n=i.charAt(a-1),l[t].test(n)){C[t]=n,r=t;break}if(a>i.length){R(t+1,h);break}}else C[t]===i.charAt(a)&&a++,u>t&&(r=t);return e?A():u>r+1?o.autoclear||C.join("")===D?(w.val()&&w.val(""),R(0,h)):A():(A(),w.val(w.val().substring(0,r+1))),u?t:s}var w=e(this),C=e.map(n.split(""),function(e,t){return"?"!=e?f[e]?d(t):e:void 0}),D=C.join(""),E=w.val();w.data(e.mask.dataName,function(){return e.map(C,function(e,t){return l[t]&&e!=d(t)?e:null}).join("")}),w.one("unmask",function(){w.off(".mask").removeData(e.mask.dataName)}).on("focus.mask",function(){if(!w.prop("readonly")){clearTimeout(t);var e;E=w.val(),e=T(),t=setTimeout(function(){w.get(0)===document.activeElement&&(A(),e==n.replace("?","").length?w.caret(0,e):w.caret(e))},10)}}).on("blur.mask",S).on("keydown.mask",x).on("keypress.mask",j).on("input.mask paste.mask",function(){w.prop("readonly")||setTimeout(function(){var e=T(!0);w.caret(e),c()},0)}),i&&r&&w.off("input.mask").on("input.mask",k),T()})}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5tYXNrZWRpbnB1dC5qcyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwib2JqIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsImZhY3RvcnkiLCJkZWZpbmUiLCJhbWQiLCJleHBvcnRzIiwicmVxdWlyZSIsImpRdWVyeSIsIiQiLCJjYXJldFRpbWVvdXRJZCIsInVhIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiaVBob25lIiwidGVzdCIsImNocm9tZSIsImFuZHJvaWQiLCJtYXNrIiwiZGVmaW5pdGlvbnMiLCI5IiwiYSIsIioiLCJhdXRvY2xlYXIiLCJkYXRhTmFtZSIsInBsYWNlaG9sZGVyIiwiZm4iLCJleHRlbmQiLCJjYXJldCIsImJlZ2luIiwiZW5kIiwicmFuZ2UiLCJ0aGlzIiwibGVuZ3RoIiwiaXMiLCJlYWNoIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJjcmVhdGVUZXh0UmFuZ2UiLCJjb2xsYXBzZSIsIm1vdmVFbmQiLCJtb3ZlU3RhcnQiLCJzZWxlY3QiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImRvY3VtZW50Iiwic2VsZWN0aW9uIiwiY3JlYXRlUmFuZ2UiLCJkdXBsaWNhdGUiLCJ0ZXh0IiwidW5tYXNrIiwidHJpZ2dlciIsIl9tYXNrIiwic2V0dGluZ3MiLCJpbnB1dCIsImRlZnMiLCJ0ZXN0cyIsInBhcnRpYWxQb3NpdGlvbiIsImZpcnN0Tm9uTWFza1BvcyIsImxhc3RSZXF1aXJlZE5vbk1hc2tQb3MiLCJsZW4iLCJvbGRWYWwiLCJkYXRhIiwiY29tcGxldGVkIiwic3BsaXQiLCJpIiwiYyIsInB1c2giLCJSZWdFeHAiLCJ0cnlGaXJlQ29tcGxldGVkIiwiYnVmZmVyIiwiZ2V0UGxhY2Vob2xkZXIiLCJjYWxsIiwiY2hhckF0Iiwic2Vla05leHQiLCJwb3MiLCJzZWVrUHJldiIsInNoaWZ0TCIsImoiLCJ3cml0ZUJ1ZmZlciIsIk1hdGgiLCJtYXgiLCJzaGlmdFIiLCJ0IiwiYW5kcm9pZElucHV0RXZlbnQiLCJjdXJWYWwiLCJ2YWwiLCJjaGVja1ZhbCIsImJsdXJFdmVudCIsImZvY3VzVGV4dCIsImNoYW5nZSIsImtleWRvd25FdmVudCIsImUiLCJwcm9wIiwiayIsIndoaWNoIiwia2V5Q29kZSIsImNsZWFyQnVmZmVyIiwicHJldmVudERlZmF1bHQiLCJrZXlwcmVzc0V2ZW50IiwicCIsIm5leHQiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInByb3h5Iiwic2V0VGltZW91dCIsInN0YXJ0Iiwiam9pbiIsImFsbG93IiwibGFzdE1hdGNoIiwiZGVmYXVsdEJ1ZmZlciIsInN1YnN0cmluZyIsIm1hcCIsIm9uZSIsIm9mZiIsInJlbW92ZURhdGEiLCJvbiIsImNsZWFyVGltZW91dCIsImdldCIsImFjdGl2ZUVsZW1lbnQiLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLFNBQVNBLFNBQVFDLEdBQU8seUJBQTRVLFFBQXRPRCxRQUFyRCxrQkFBWEUsU0FBb0QsZ0JBQXBCQSxRQUFPQyxTQUFtQyxTQUFpQkYsR0FBTyxhQUFjQSxJQUEyQixTQUFpQkEsR0FBTyxNQUFPQSxJQUF5QixrQkFBWEMsU0FBeUJELEVBQUlHLGNBQWdCRixRQUFVRCxJQUFRQyxPQUFPRyxVQUFZLGVBQWtCSixLQUF5QkEsSUFRbFgsU0FBVUssR0FDVCxrQkFBcUJDLFNBQVVBLE9BQU9DLElBQU1ELFFBQVEsVUFBV0QsR0FBV0EsRUFBUSxXQUFnQyxtQkFBWkcsU0FBMEIsWUFBY1QsUUFBUVMsVUFBWUMsUUFBUSxVQUFZQyxTQUN0TCxTQUFVQyxHQUNWLEdBQUlDLEdBQ0FDLEVBQUtDLFVBQVVDLFVBQ2ZDLEVBQVMsVUFBVUMsS0FBS0osR0FDeEJLLEVBQVMsVUFBVUQsS0FBS0osR0FDeEJNLEVBQVUsV0FBV0YsS0FBS0osRUFDOUJGLEdBQUVTLE1BQ0FDLGFBQ0VDLEVBQUssUUFDTEMsRUFBRyxXQUNIQyxJQUFLLGVBRVBDLFdBQVcsRUFD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R0FBTXpCLE1BQU04QyxHQUFNTixLQUNqQixLQUNEcEQsR0FBVUMsR0FBV29DLEVBQU0rRCxJQUFJLGNBQWNFLEdBQUcsYUFBY25DLEdBQW9CRyIsImZpbGUiOiJqcXVlcnkubWFza2VkaW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG4vKlxuICAgIGpRdWVyeSBNYXNrZWQgSW5wdXQgUGx1Z2luXG4gICAgQ29weXJpZ2h0IChjKSAyMDA3IC0gMjAxNSBKb3NoIEJ1c2ggKGRpZ2l0YWxidXNoLmNvbSlcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgKGh0dHA6Ly9kaWdpdGFsYnVzaC5jb20vcHJvamVjdHMvbWFza2VkLWlucHV0LXBsdWdpbi8jbGljZW5zZSlcbiAgICBWZXJzaW9uOiAxLjQuMVxuKi9cbiFmdW5jdGlvbiAoZmFjdG9yeSkge1xuICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGRlZmluZSAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFtcImpxdWVyeVwiXSwgZmFjdG9yeSkgOiBmYWN0b3J5KFwib2JqZWN0XCIgPT0gKHR5cGVvZiBleHBvcnRzID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YoZXhwb3J0cykpID8gcmVxdWlyZShcImpxdWVyeVwiKSA6IGpRdWVyeSk7XG59KGZ1bmN0aW9uICgkKSB7XG4gIHZhciBjYXJldFRpbWVvdXRJZCxcbiAgICAgIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudCxcbiAgICAgIGlQaG9uZSA9IC9pcGhvbmUvaS50ZXN0KHVhKSxcbiAgICAgIGNocm9tZSA9IC9jaHJvbWUvaS50ZXN0KHVhKSxcbiAgICAgIGFuZHJvaWQgPSAvYW5kcm9pZC9pLnRlc3QodWEpO1xuICAkLm1hc2sgPSB7XG4gICAgZGVmaW5pdGlvbnM6IHtcbiAgICAgIFwiOVwiOiBcIlswLTldXCIsXG4gICAgICBhOiBcIltBLVphLXpdXCIsXG4gICAgICBcIipcIjogXCJbQS1aYS16MC05XVwiXG4gICAgfSxcbiAgICBhdXRvY2xlYXI6ICEwLFxuICAgIGRhdGFOYW1lOiBcInJhd01hc2tGblwiLFxuICAgIHBsYWNlaG9sZGVyOiBcIl9cIlxuICB9LCAkLmZuLmV4dGVuZCh7XG4gICAgY2FyZXQ6IGZ1bmN0aW9uIGNhcmV0KGJlZ2luLCBlbmQpIHtcbiAgICAgIHZhciByYW5nZTtcbiAgICAgIGlmICgwICE9PSB0aGlzLmxlbmd0aCAmJiAhdGhpcy5pcyhcIjpoaWRkZW5cIikpIHJldHVybiBcIm51bWJlclwiID09IHR5cGVvZiBiZWdpbiA/IChlbmQgPSBcIm51bWJlclwiID09IHR5cGVvZiBlbmQgPyBlbmQgOiBiZWdpbiwgdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3Rpb25SYW5nZSA/IHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UoYmVnaW4sIGVuZCkgOiB0aGlzLmNyZWF0ZVRleHRSYW5nZSAmJiAocmFuZ2UgPSB0aGlzLmNyZWF0ZVRleHRSYW5nZSgpLCByYW5nZS5jb2xsYXBzZSghMCksIHJhbmdlLm1vdmVFbmQoXCJjaGFyYWN0ZXJcIiwgZW5kKSwgcmFuZ2UubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIGJlZ2luKSwgcmFuZ2Uuc2VsZWN0KCkpO1xuICAgICAgfSkpIDogKHRoaXNbMF0uc2V0U2VsZWN0aW9uUmFuZ2UgPyAoYmVnaW4gPSB0aGlzWzBdLnNlbGVjdGlvblN0YXJ0LCBlbmQgPSB0aGlzWzBdLnNlbGVjdGlvbkVuZCkgOiBkb2N1bWVudC5zZWxlY3Rpb24gJiYgZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlICYmIChyYW5nZSA9IGRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpLCBiZWdpbiA9IDAgLSByYW5nZS5kdXBsaWNhdGUoKS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwgLTFlNSksIGVuZCA9IGJlZ2luICsgcmFuZ2UudGV4dC5sZW5ndGgpLCB7XG4gICAgICAgIGJlZ2luOiBiZWdpbixcbiAgICAgICAgZW5kOiBlbmRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdW5tYXNrOiBmdW5jdGlvbiB1bm1hc2soKSB7XG4gICAgICByZXR1cm4gdGhpcy50cmlnZ2VyKFwidW5tYXNrXCIpO1xuICAgIH0sXG4gICAgbWFzazogZnVuY3Rpb24gbWFzayhfbWFzaywgc2V0dGluZ3MpIHtcbiAgICAgIHZhciBpbnB1dCwgZGVmcywgdGVzdHMsIHBhcnRpYWxQb3NpdGlvbiwgZmlyc3ROb25NYXNrUG9zLCBsYXN0UmVxdWlyZWROb25NYXNrUG9zLCBsZW4sIG9sZFZhbDtcblxuICAgICAgaWYgKCFfbWFzayAmJiB0aGlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaW5wdXQgPSAkKHRoaXNbMF0pO1xuICAgICAgICB2YXIgZm4gPSBpbnB1dC5kYXRhKCQubWFzay5kYXRhTmFtZSk7XG4gICAgICAgIHJldHVybiBmbiA/IGZuKCkgOiB2b2lkIDA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcbiAgICAgICAgYXV0b2NsZWFyOiAkLm1hc2suYXV0b2NsZWFyLFxuICAgICAgICBwbGFjZWhvbGRlcjogJC5tYXNrLnBsYWNlaG9sZGVyLFxuICAgICAgICBjb21wbGV0ZWQ6IG51bGxcbiAgICAgIH0sIHNldHRpbmdzKSwgZGVmcyA9ICQubWFzay5kZWZpbml0aW9ucywgdGVzdHMgPSBbXSwgcGFydGlhbFBvc2l0aW9uID0gbGVuID0gX21hc2subGVuZ3RoLCBmaXJzdE5vbk1hc2tQb3MgPSBudWxsLCAkLmVhY2goX21hc2suc3BsaXQoXCJcIiksIGZ1bmN0aW9uIChpLCBjKSB7XG4gICAgICAgIFwiP1wiID09IGMgPyAobGVuLS0sIHBhcnRpYWxQb3NpdGlvbiA9IGkpIDogZGVmc1tjXSA/ICh0ZXN0cy5wdXNoKG5ldyBSZWdFeHAoZGVmc1tjXSkpLCBudWxsID09PSBmaXJzdE5vbk1hc2tQb3MgJiYgKGZpcnN0Tm9uTWFza1BvcyA9IHRlc3RzLmxlbmd0aCAtIDEpLCBwYXJ0aWFsUG9zaXRpb24gPiBpICYmIChsYXN0UmVxdWlyZWROb25NYXNrUG9zID0gdGVzdHMubGVuZ3RoIC0gMSkpIDogdGVzdHMucHVzaChudWxsKTtcbiAgICAgIH0pLCB0aGlzLnRyaWdnZXIoXCJ1bm1hc2tcIikuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIHRyeUZpcmVDb21wbGV0ZWQoKSB7XG4gICAgICAgICAgaWYgKHNldHRpbmdzLmNvbXBsZXRlZCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IGZpcnN0Tm9uTWFza1BvczsgbGFzdFJlcXVpcmVkTm9uTWFza1BvcyA+PSBpOyBpKyspIHtcbiAgICAgICAgICAgICAgaWYgKHRlc3RzW2ldICYmIGJ1ZmZlcltpXSA9PT0gZ2V0UGxhY2Vob2xkZXIoaSkpIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2V0dGluZ3MuY29tcGxldGVkLmNhbGwoaW5wdXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFBsYWNlaG9sZGVyKGkpIHtcbiAgICAgICAgICByZXR1cm4gc2V0dGluZ3MucGxhY2Vob2xkZXIuY2hhckF0KGkgPCBzZXR0aW5ncy5wbGFjZWhvbGRlci5sZW5ndGggPyBpIDogMCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZWVrTmV4dChwb3MpIHtcbiAgICAgICAgICBmb3IgKDsgKytwb3MgPCBsZW4gJiYgIXRlc3RzW3Bvc107KSB7XG4gICAgICAgICAgICA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHBvcztcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNlZWtQcmV2KHBvcykge1xuICAgICAgICAgIGZvciAoOyAtLXBvcyA+PSAwICYmICF0ZXN0c1twb3NdOykge1xuICAgICAgICAgICAgO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBwb3M7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzaGlmdEwoYmVnaW4sIGVuZCkge1xuICAgICAgICAgIHZhciBpLCBqO1xuXG4gICAgICAgICAgaWYgKCEoMCA+IGJlZ2luKSkge1xuICAgICAgICAgICAgZm9yIChpID0gYmVnaW4sIGogPSBzZWVrTmV4dChlbmQpOyBsZW4gPiBpOyBpKyspIHtcbiAgICAgICAgICAgICAgaWYgKHRlc3RzW2ldKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEobGVuID4gaiAmJiB0ZXN0c1tpXS50ZXN0KGJ1ZmZlcltqXSkpKSBicmVhaztcbiAgICAgICAgICAgICAgICBidWZmZXJbaV0gPSBidWZmZXJbal0sIGJ1ZmZlcltqXSA9IGdldFBsYWNlaG9sZGVyKGopLCBqID0gc2Vla05leHQoaik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd3JpdGVCdWZmZXIoKSwgaW5wdXQuY2FyZXQoTWF0aC5tYXgoZmlyc3ROb25NYXNrUG9zLCBiZWdpbikpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNoaWZ0Uihwb3MpIHtcbiAgICAgICAgICB2YXIgaSwgYywgaiwgdDtcblxuICAgICAgICAgIGZvciAoaSA9IHBvcywgYyA9IGdldFBsYWNlaG9sZGVyKHBvcyk7IGxlbiA+IGk7IGkrKykge1xuICAgICAgICAgICAgaWYgKHRlc3RzW2ldKSB7XG4gICAgICAgICAgICAgIGlmIChqID0gc2Vla05leHQoaSksIHQgPSBidWZmZXJbaV0sIGJ1ZmZlcltpXSA9IGMsICEobGVuID4gaiAmJiB0ZXN0c1tqXS50ZXN0KHQpKSkgYnJlYWs7XG4gICAgICAgICAgICAgIGMgPSB0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGFuZHJvaWRJbnB1dEV2ZW50KCkge1xuICAgICAgICAgIHZhciBjdXJWYWwgPSBpbnB1dC52YWwoKSxcbiAgICAgICAgICAgICAgcG9zID0gaW5wdXQuY2FyZXQoKTtcblxuICAgICAgICAgIGlmIChvbGRWYWwgJiYgb2xkVmFsLmxlbmd0aCAmJiBvbGRWYWwubGVuZ3RoID4gY3VyVmFsLmxlbmd0aCkge1xuICAgICAgICAgICAgZm9yIChjaGVja1ZhbCghMCk7IHBvcy5iZWdpbiA+IDAgJiYgIXRlc3RzW3Bvcy5iZWdpbiAtIDFdOykge1xuICAgICAgICAgICAgICBwb3MuYmVnaW4tLTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKDAgPT09IHBvcy5iZWdpbikgZm9yICg7IHBvcy5iZWdpbiA8IGZpcnN0Tm9uTWFza1BvcyAmJiAhdGVzdHNbcG9zLmJlZ2luXTspIHtcbiAgICAgICAgICAgICAgcG9zLmJlZ2luKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dC5jYXJldChwb3MuYmVnaW4sIHBvcy5iZWdpbik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoY2hlY2tWYWwoITApOyBwb3MuYmVnaW4gPCBsZW4gJiYgIXRlc3RzW3Bvcy5iZWdpbl07KSB7XG4gICAgICAgICAgICAgIHBvcy5iZWdpbisrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpbnB1dC5jYXJldChwb3MuYmVnaW4sIHBvcy5iZWdpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdHJ5RmlyZUNvbXBsZXRlZCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gYmx1ckV2ZW50KCkge1xuICAgICAgICAgIGNoZWNrVmFsKCksIGlucHV0LnZhbCgpICE9IGZvY3VzVGV4dCAmJiBpbnB1dC5jaGFuZ2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGtleWRvd25FdmVudChlKSB7XG4gICAgICAgICAgaWYgKCFpbnB1dC5wcm9wKFwicmVhZG9ubHlcIikpIHtcbiAgICAgICAgICAgIHZhciBwb3MsXG4gICAgICAgICAgICAgICAgYmVnaW4sXG4gICAgICAgICAgICAgICAgZW5kLFxuICAgICAgICAgICAgICAgIGsgPSBlLndoaWNoIHx8IGUua2V5Q29kZTtcbiAgICAgICAgICAgIG9sZFZhbCA9IGlucHV0LnZhbCgpLCA4ID09PSBrIHx8IDQ2ID09PSBrIHx8IGlQaG9uZSAmJiAxMjcgPT09IGsgPyAocG9zID0gaW5wdXQuY2FyZXQoKSwgYmVnaW4gPSBwb3MuYmVnaW4sIGVuZCA9IHBvcy5lbmQsIGVuZCAtIGJlZ2luID09PSAwICYmIChiZWdpbiA9IDQ2ICE9PSBrID8gc2Vla1ByZXYoYmVnaW4pIDogZW5kID0gc2Vla05leHQoYmVnaW4gLSAxKSwgZW5kID0gNDYgPT09IGsgPyBzZWVrTmV4dChlbmQpIDogZW5kKSwgY2xlYXJCdWZmZXIoYmVnaW4sIGVuZCksIHNoaWZ0TChiZWdpbiwgZW5kIC0gMSksIGUucHJldmVudERlZmF1bHQoKSkgOiAxMyA9PT0gayA/IGJsdXJFdmVudC5jYWxsKHRoaXMsIGUpIDogMjcgPT09IGsgJiYgKGlucHV0LnZhbChmb2N1c1RleHQpLCBpbnB1dC5jYXJldCgwLCBjaGVja1ZhbCgpKSwgZS5wcmV2ZW50RGVmYXVsdCgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBrZXlwcmVzc0V2ZW50KGUpIHtcbiAgICAgICAgICBpZiAoIWlucHV0LnByb3AoXCJyZWFkb25seVwiKSkge1xuICAgICAgICAgICAgdmFyIHAsXG4gICAgICAgICAgICAgICAgYyxcbiAgICAgICAgICAgICAgICBuZXh0LFxuICAgICAgICAgICAgICAgIGsgPSBlLndoaWNoIHx8IGUua2V5Q29kZSxcbiAgICAgICAgICAgICAgICBwb3MgPSBpbnB1dC5jYXJldCgpO1xuXG4gICAgICAgICAgICBpZiAoIShlLmN0cmxLZXkgfHwgZS5hbHRLZXkgfHwgZS5tZXRhS2V5IHx8IDMyID4gaykgJiYgayAmJiAxMyAhPT0gaykge1xuICAgICAgICAgICAgICBpZiAocG9zLmVuZCAtIHBvcy5iZWdpbiAhPT0gMCAmJiAoY2xlYXJCdWZmZXIocG9zLmJlZ2luLCBwb3MuZW5kKSwgc2hpZnRMKHBvcy5iZWdpbiwgcG9zLmVuZCAtIDEpKSwgcCA9IHNlZWtOZXh0KHBvcy5iZWdpbiAtIDEpLCBsZW4gPiBwICYmIChjID0gU3RyaW5nLmZyb21DaGFyQ29kZShrKSwgdGVzdHNbcF0udGVzdChjKSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2hpZnRSKHApLCBidWZmZXJbcF0gPSBjLCB3cml0ZUJ1ZmZlcigpLCBuZXh0ID0gc2Vla05leHQocCksIGFuZHJvaWQpIHtcbiAgICAgICAgICAgICAgICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIHByb3h5KCkge1xuICAgICAgICAgICAgICAgICAgICAkLnByb3h5KCQuZm4uY2FyZXQsIGlucHV0LCBuZXh0KSgpO1xuICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChwcm94eSwgMCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlucHV0LmNhcmV0KG5leHQpO1xuXG4gICAgICAgICAgICAgICAgcG9zLmJlZ2luIDw9IGxhc3RSZXF1aXJlZE5vbk1hc2tQb3MgJiYgdHJ5RmlyZUNvbXBsZXRlZCgpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNsZWFyQnVmZmVyKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgICB2YXIgaTtcblxuICAgICAgICAgIGZvciAoaSA9IHN0YXJ0OyBlbmQgPiBpICYmIGxlbiA+IGk7IGkrKykge1xuICAgICAgICAgICAgdGVzdHNbaV0gJiYgKGJ1ZmZlcltpXSA9IGdldFBsYWNlaG9sZGVyKGkpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB3cml0ZUJ1ZmZlcigpIHtcbiAgICAgICAgICBpbnB1dC52YWwoYnVmZmVyLmpvaW4oXCJcIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY2hlY2tWYWwoYWxsb3cpIHtcbiAgICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgICAgYyxcbiAgICAgICAgICAgICAgcG9zLFxuICAgICAgICAgICAgICB0ZXN0ID0gaW5wdXQudmFsKCksXG4gICAgICAgICAgICAgIGxhc3RNYXRjaCA9IC0xO1xuXG4gICAgICAgICAgZm9yIChpID0gMCwgcG9zID0gMDsgbGVuID4gaTsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodGVzdHNbaV0pIHtcbiAgICAgICAgICAgICAgZm9yIChidWZmZXJbaV0gPSBnZXRQbGFjZWhvbGRlcihpKTsgcG9zKysgPCB0ZXN0Lmxlbmd0aDspIHtcbiAgICAgICAgICAgICAgICBpZiAoYyA9IHRlc3QuY2hhckF0KHBvcyAtIDEpLCB0ZXN0c1tpXS50ZXN0KGMpKSB7XG4gICAgICAgICAgICAgICAgICBidWZmZXJbaV0gPSBjLCBsYXN0TWF0Y2ggPSBpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHBvcyA+IHRlc3QubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJCdWZmZXIoaSArIDEsIGxlbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBidWZmZXJbaV0gPT09IHRlc3QuY2hhckF0KHBvcykgJiYgcG9zKyssIHBhcnRpYWxQb3NpdGlvbiA+IGkgJiYgKGxhc3RNYXRjaCA9IGkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBhbGxvdyA/IHdyaXRlQnVmZmVyKCkgOiBwYXJ0aWFsUG9zaXRpb24gPiBsYXN0TWF0Y2ggKyAxID8gc2V0dGluZ3MuYXV0b2NsZWFyIHx8IGJ1ZmZlci5qb2luKFwiXCIpID09PSBkZWZhdWx0QnVmZmVyID8gKGlucHV0LnZhbCgpICYmIGlucHV0LnZhbChcIlwiKSwgY2xlYXJCdWZmZXIoMCwgbGVuKSkgOiB3cml0ZUJ1ZmZlcigpIDogKHdyaXRlQnVmZmVyKCksIGlucHV0LnZhbChpbnB1dC52YWwoKS5zdWJzdHJpbmcoMCwgbGFzdE1hdGNoICsgMSkpKSwgcGFydGlhbFBvc2l0aW9uID8gaSA6IGZpcnN0Tm9uTWFza1BvcztcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpbnB1dCA9ICQodGhpcyksXG4gICAgICAgICAgICBidWZmZXIgPSAkLm1hcChfbWFzay5zcGxpdChcIlwiKSwgZnVuY3Rpb24gKGMsIGkpIHtcbiAgICAgICAgICByZXR1cm4gXCI/XCIgIT0gYyA/IGRlZnNbY10gPyBnZXRQbGFjZWhvbGRlcihpKSA6IGMgOiB2b2lkIDA7XG4gICAgICAgIH0pLFxuICAgICAgICAgICAgZGVmYXVsdEJ1ZmZlciA9IGJ1ZmZlci5qb2luKFwiXCIpLFxuICAgICAgICAgICAgZm9jdXNUZXh0ID0gaW5wdXQudmFsKCk7XG4gICAgICAgIGlucHV0LmRhdGEoJC5tYXNrLmRhdGFOYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuICQubWFwKGJ1ZmZlciwgZnVuY3Rpb24gKGMsIGkpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZXN0c1tpXSAmJiBjICE9IGdldFBsYWNlaG9sZGVyKGkpID8gYyA6IG51bGw7XG4gICAgICAgICAgfSkuam9pbihcIlwiKTtcbiAgICAgICAgfSksIGlucHV0Lm9uZShcInVubWFza1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW5wdXQub2ZmKFwiLm1hc2tcIikucmVtb3ZlRGF0YSgkLm1hc2suZGF0YU5hbWUpO1xuICAgICAgICB9KS5vbihcImZvY3VzLm1hc2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmICghaW5wdXQucHJvcChcInJlYWRvbmx5XCIpKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoY2FyZXRUaW1lb3V0SWQpO1xuICAgICAgICAgICAgdmFyIHBvcztcbiAgICAgICAgICAgIGZvY3VzVGV4dCA9IGlucHV0LnZhbCgpLCBwb3MgPSBjaGVja1ZhbCgpLCBjYXJldFRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBpbnB1dC5nZXQoMCkgPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKHdyaXRlQnVmZmVyKCksIHBvcyA9PSBfbWFzay5yZXBsYWNlKFwiP1wiLCBcIlwiKS5sZW5ndGggPyBpbnB1dC5jYXJldCgwLCBwb3MpIDogaW5wdXQuY2FyZXQocG9zKSk7XG4gICAgICAgICAgICB9LCAxMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KS5vbihcImJsdXIubWFza1wiLCBibHVyRXZlbnQpLm9uKFwia2V5ZG93bi5tYXNrXCIsIGtleWRvd25FdmVudCkub24oXCJrZXlwcmVzcy5tYXNrXCIsIGtleXByZXNzRXZlbnQpLm9uKFwiaW5wdXQubWFzayBwYXN0ZS5tYXNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpbnB1dC5wcm9wKFwicmVhZG9ubHlcIikgfHwgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcG9zID0gY2hlY2tWYWwoITApO1xuICAgICAgICAgICAgaW5wdXQuY2FyZXQocG9zKSwgdHJ5RmlyZUNvbXBsZXRlZCgpO1xuICAgICAgICAgIH0sIDApO1xuICAgICAgICB9KSwgY2hyb21lICYmIGFuZHJvaWQgJiYgaW5wdXQub2ZmKFwiaW5wdXQubWFza1wiKS5vbihcImlucHV0Lm1hc2tcIiwgYW5kcm9pZElucHV0RXZlbnQpLCBjaGVja1ZhbCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn0pOyJdfQ==
